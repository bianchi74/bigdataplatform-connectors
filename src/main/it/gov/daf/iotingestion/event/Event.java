/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package it.gov.daf.iotingestion.event;  
@SuppressWarnings("all")
/** A generic event. See the reference guide for event format information. */
@org.apache.avro.specific.AvroGenerated
public class Event extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Event\",\"namespace\":\"it.gov.daf.iotingestion.event\",\"doc\":\"A generic event. See the reference guide for event format information.\",\"fields\":[{\"name\":\"version\",\"type\":\"long\",\"doc\":\"Version of this schema\",\"default\":1},{\"name\":\"id\",\"type\":\"string\",\"doc\":\"A globally unique identifier for this event.\"},{\"name\":\"ts\",\"type\":\"long\",\"doc\":\"Epoch timestamp in millis. Required.\"},{\"name\":\"temporal_granularity\",\"type\":[\"null\",\"string\"],\"doc\":\"atom of time from a particular application’s point of view, for example: second, minute, hour, or day. Optional.\",\"default\":null},{\"name\":\"event_certainty\",\"type\":\"double\",\"doc\":\"estimation of the certainty of this particular event [0,1]. Optional.\",\"default\":1.0},{\"name\":\"event_type_id\",\"type\":\"int\",\"doc\":\"ID indicating the type of event: 0 for metric event, 1 for changing state events, 2 for generic events Required.\"},{\"name\":\"event_subtype_id\",\"type\":[\"null\",\"string\"],\"doc\":\"It's an additional field that can be used to additionally qualify the event Optional.\",\"default\":null},{\"name\":\"event_annotation\",\"type\":[\"null\",\"string\"],\"doc\":\"free-text explanation of what happened in this particular event. Optional.\",\"default\":null},{\"name\":\"source\",\"type\":\"string\",\"doc\":\"The event source attribute is the name of the entity that originated this event. This can be either an event producer or an event processing agent. Required\"},{\"name\":\"location\",\"type\":\"string\",\"doc\":\"Location from which the event was generated. Required.\",\"default\":\"\"},{\"name\":\"body\",\"type\":[\"null\",\"bytes\"],\"doc\":\"Raw event content in bytes. Optional.\",\"default\":null},{\"name\":\"attributes\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"Event type-specific key/value pairs, usually extracted from the event body. Required.\",\"order\":\"ignore\"}],\"version\":1}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Version of this schema */
  @Deprecated public long version;
  /** A globally unique identifier for this event. */
  @Deprecated public java.lang.CharSequence id;
  /** Epoch timestamp in millis. Required. */
  @Deprecated public long ts;
  /** atom of time from a particular application’s point of view, for example: second, minute, hour, or day. Optional. */
  @Deprecated public java.lang.CharSequence temporal_granularity;
  /** estimation of the certainty of this particular event [0,1]. Optional. */
  @Deprecated public double event_certainty;
  /** ID indicating the type of event: 0 for metric event, 1 for changing state events, 2 for generic events Required. */
  @Deprecated public int event_type_id;
  /** It's an additional field that can be used to additionally qualify the event Optional. */
  @Deprecated public java.lang.CharSequence event_subtype_id;
  /** free-text explanation of what happened in this particular event. Optional. */
  @Deprecated public java.lang.CharSequence event_annotation;
  /** The event source attribute is the name of the entity that originated this event. This can be either an event producer or an event processing agent. Required */
  @Deprecated public java.lang.CharSequence source;
  /** Location from which the event was generated. Required. */
  @Deprecated public java.lang.CharSequence location;
  /** Raw event content in bytes. Optional. */
  @Deprecated public java.nio.ByteBuffer body;
  /** Event type-specific key/value pairs, usually extracted from the event body. Required. */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> attributes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public Event() {}

  /**
   * All-args constructor.
   */
  public Event(java.lang.Long version, java.lang.CharSequence id, java.lang.Long ts, java.lang.CharSequence temporal_granularity, java.lang.Double event_certainty, java.lang.Integer event_type_id, java.lang.CharSequence event_subtype_id, java.lang.CharSequence event_annotation, java.lang.CharSequence source, java.lang.CharSequence location, java.nio.ByteBuffer body, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> attributes) {
    this.version = version;
    this.id = id;
    this.ts = ts;
    this.temporal_granularity = temporal_granularity;
    this.event_certainty = event_certainty;
    this.event_type_id = event_type_id;
    this.event_subtype_id = event_subtype_id;
    this.event_annotation = event_annotation;
    this.source = source;
    this.location = location;
    this.body = body;
    this.attributes = attributes;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return version;
    case 1: return id;
    case 2: return ts;
    case 3: return temporal_granularity;
    case 4: return event_certainty;
    case 5: return event_type_id;
    case 6: return event_subtype_id;
    case 7: return event_annotation;
    case 8: return source;
    case 9: return location;
    case 10: return body;
    case 11: return attributes;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: version = (java.lang.Long)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: ts = (java.lang.Long)value$; break;
    case 3: temporal_granularity = (java.lang.CharSequence)value$; break;
    case 4: event_certainty = (java.lang.Double)value$; break;
    case 5: event_type_id = (java.lang.Integer)value$; break;
    case 6: event_subtype_id = (java.lang.CharSequence)value$; break;
    case 7: event_annotation = (java.lang.CharSequence)value$; break;
    case 8: source = (java.lang.CharSequence)value$; break;
    case 9: location = (java.lang.CharSequence)value$; break;
    case 10: body = (java.nio.ByteBuffer)value$; break;
    case 11: attributes = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'version' field.
   * Version of this schema   */
  public java.lang.Long getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * Version of this schema   * @param value the value to set.
   */
  public void setVersion(java.lang.Long value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'id' field.
   * A globally unique identifier for this event.   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * A globally unique identifier for this event.   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'ts' field.
   * Epoch timestamp in millis. Required.   */
  public java.lang.Long getTs() {
    return ts;
  }

  /**
   * Sets the value of the 'ts' field.
   * Epoch timestamp in millis. Required.   * @param value the value to set.
   */
  public void setTs(java.lang.Long value) {
    this.ts = value;
  }

  /**
   * Gets the value of the 'temporal_granularity' field.
   * atom of time from a particular application’s point of view, for example: second, minute, hour, or day. Optional.   */
  public java.lang.CharSequence getTemporalGranularity() {
    return temporal_granularity;
  }

  /**
   * Sets the value of the 'temporal_granularity' field.
   * atom of time from a particular application’s point of view, for example: second, minute, hour, or day. Optional.   * @param value the value to set.
   */
  public void setTemporalGranularity(java.lang.CharSequence value) {
    this.temporal_granularity = value;
  }

  /**
   * Gets the value of the 'event_certainty' field.
   * estimation of the certainty of this particular event [0,1]. Optional.   */
  public java.lang.Double getEventCertainty() {
    return event_certainty;
  }

  /**
   * Sets the value of the 'event_certainty' field.
   * estimation of the certainty of this particular event [0,1]. Optional.   * @param value the value to set.
   */
  public void setEventCertainty(java.lang.Double value) {
    this.event_certainty = value;
  }

  /**
   * Gets the value of the 'event_type_id' field.
   * ID indicating the type of event: 0 for metric event, 1 for changing state events, 2 for generic events Required.   */
  public java.lang.Integer getEventTypeId() {
    return event_type_id;
  }

  /**
   * Sets the value of the 'event_type_id' field.
   * ID indicating the type of event: 0 for metric event, 1 for changing state events, 2 for generic events Required.   * @param value the value to set.
   */
  public void setEventTypeId(java.lang.Integer value) {
    this.event_type_id = value;
  }

  /**
   * Gets the value of the 'event_subtype_id' field.
   * It's an additional field that can be used to additionally qualify the event Optional.   */
  public java.lang.CharSequence getEventSubtypeId() {
    return event_subtype_id;
  }

  /**
   * Sets the value of the 'event_subtype_id' field.
   * It's an additional field that can be used to additionally qualify the event Optional.   * @param value the value to set.
   */
  public void setEventSubtypeId(java.lang.CharSequence value) {
    this.event_subtype_id = value;
  }

  /**
   * Gets the value of the 'event_annotation' field.
   * free-text explanation of what happened in this particular event. Optional.   */
  public java.lang.CharSequence getEventAnnotation() {
    return event_annotation;
  }

  /**
   * Sets the value of the 'event_annotation' field.
   * free-text explanation of what happened in this particular event. Optional.   * @param value the value to set.
   */
  public void setEventAnnotation(java.lang.CharSequence value) {
    this.event_annotation = value;
  }

  /**
   * Gets the value of the 'source' field.
   * The event source attribute is the name of the entity that originated this event. This can be either an event producer or an event processing agent. Required   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * The event source attribute is the name of the entity that originated this event. This can be either an event producer or an event processing agent. Required   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'location' field.
   * Location from which the event was generated. Required.   */
  public java.lang.CharSequence getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * Location from which the event was generated. Required.   * @param value the value to set.
   */
  public void setLocation(java.lang.CharSequence value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'body' field.
   * Raw event content in bytes. Optional.   */
  public java.nio.ByteBuffer getBody() {
    return body;
  }

  /**
   * Sets the value of the 'body' field.
   * Raw event content in bytes. Optional.   * @param value the value to set.
   */
  public void setBody(java.nio.ByteBuffer value) {
    this.body = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   * Event type-specific key/value pairs, usually extracted from the event body. Required.   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   * Event type-specific key/value pairs, usually extracted from the event body. Required.   * @param value the value to set.
   */
  public void setAttributes(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.attributes = value;
  }

  /** Creates a new Event RecordBuilder */
  public static it.gov.daf.iotingestion.event.Event.Builder newBuilder() {
    return new it.gov.daf.iotingestion.event.Event.Builder();
  }
  
  /** Creates a new Event RecordBuilder by copying an existing Builder */
  public static it.gov.daf.iotingestion.event.Event.Builder newBuilder(it.gov.daf.iotingestion.event.Event.Builder other) {
    return new it.gov.daf.iotingestion.event.Event.Builder(other);
  }
  
  /** Creates a new Event RecordBuilder by copying an existing Event instance */
  public static it.gov.daf.iotingestion.event.Event.Builder newBuilder(it.gov.daf.iotingestion.event.Event other) {
    return new it.gov.daf.iotingestion.event.Event.Builder(other);
  }
  
  /**
   * RecordBuilder for Event instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Event>
    implements org.apache.avro.data.RecordBuilder<Event> {

    private long version;
    private java.lang.CharSequence id;
    private long ts;
    private java.lang.CharSequence temporal_granularity;
    private double event_certainty;
    private int event_type_id;
    private java.lang.CharSequence event_subtype_id;
    private java.lang.CharSequence event_annotation;
    private java.lang.CharSequence source;
    private java.lang.CharSequence location;
    private java.nio.ByteBuffer body;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> attributes;

    /** Creates a new Builder */
    private Builder() {
      super(it.gov.daf.iotingestion.event.Event.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(it.gov.daf.iotingestion.event.Event.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.version)) {
        this.version = data().deepCopy(fields()[0].schema(), other.version);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ts)) {
        this.ts = data().deepCopy(fields()[2].schema(), other.ts);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.temporal_granularity)) {
        this.temporal_granularity = data().deepCopy(fields()[3].schema(), other.temporal_granularity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event_certainty)) {
        this.event_certainty = data().deepCopy(fields()[4].schema(), other.event_certainty);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_type_id)) {
        this.event_type_id = data().deepCopy(fields()[5].schema(), other.event_type_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.event_subtype_id)) {
        this.event_subtype_id = data().deepCopy(fields()[6].schema(), other.event_subtype_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.event_annotation)) {
        this.event_annotation = data().deepCopy(fields()[7].schema(), other.event_annotation);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.source)) {
        this.source = data().deepCopy(fields()[8].schema(), other.source);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.location)) {
        this.location = data().deepCopy(fields()[9].schema(), other.location);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.body)) {
        this.body = data().deepCopy(fields()[10].schema(), other.body);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.attributes)) {
        this.attributes = data().deepCopy(fields()[11].schema(), other.attributes);
        fieldSetFlags()[11] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Event instance */
    private Builder(it.gov.daf.iotingestion.event.Event other) {
            super(it.gov.daf.iotingestion.event.Event.SCHEMA$);
      if (isValidValue(fields()[0], other.version)) {
        this.version = data().deepCopy(fields()[0].schema(), other.version);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ts)) {
        this.ts = data().deepCopy(fields()[2].schema(), other.ts);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.temporal_granularity)) {
        this.temporal_granularity = data().deepCopy(fields()[3].schema(), other.temporal_granularity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event_certainty)) {
        this.event_certainty = data().deepCopy(fields()[4].schema(), other.event_certainty);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_type_id)) {
        this.event_type_id = data().deepCopy(fields()[5].schema(), other.event_type_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.event_subtype_id)) {
        this.event_subtype_id = data().deepCopy(fields()[6].schema(), other.event_subtype_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.event_annotation)) {
        this.event_annotation = data().deepCopy(fields()[7].schema(), other.event_annotation);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.source)) {
        this.source = data().deepCopy(fields()[8].schema(), other.source);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.location)) {
        this.location = data().deepCopy(fields()[9].schema(), other.location);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.body)) {
        this.body = data().deepCopy(fields()[10].schema(), other.body);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.attributes)) {
        this.attributes = data().deepCopy(fields()[11].schema(), other.attributes);
        fieldSetFlags()[11] = true;
      }
    }

    /** Gets the value of the 'version' field */
    public java.lang.Long getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public it.gov.daf.iotingestion.event.Event.Builder setVersion(long value) {
      validate(fields()[0], value);
      this.version = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'version' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearVersion() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public it.gov.daf.iotingestion.event.Event.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'id' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'ts' field */
    public java.lang.Long getTs() {
      return ts;
    }
    
    /** Sets the value of the 'ts' field */
    public it.gov.daf.iotingestion.event.Event.Builder setTs(long value) {
      validate(fields()[2], value);
      this.ts = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'ts' field has been set */
    public boolean hasTs() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'ts' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearTs() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'temporal_granularity' field */
    public java.lang.CharSequence getTemporalGranularity() {
      return temporal_granularity;
    }
    
    /** Sets the value of the 'temporal_granularity' field */
    public it.gov.daf.iotingestion.event.Event.Builder setTemporalGranularity(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.temporal_granularity = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'temporal_granularity' field has been set */
    public boolean hasTemporalGranularity() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'temporal_granularity' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearTemporalGranularity() {
      temporal_granularity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'event_certainty' field */
    public java.lang.Double getEventCertainty() {
      return event_certainty;
    }
    
    /** Sets the value of the 'event_certainty' field */
    public it.gov.daf.iotingestion.event.Event.Builder setEventCertainty(double value) {
      validate(fields()[4], value);
      this.event_certainty = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'event_certainty' field has been set */
    public boolean hasEventCertainty() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'event_certainty' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearEventCertainty() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'event_type_id' field */
    public java.lang.Integer getEventTypeId() {
      return event_type_id;
    }
    
    /** Sets the value of the 'event_type_id' field */
    public it.gov.daf.iotingestion.event.Event.Builder setEventTypeId(int value) {
      validate(fields()[5], value);
      this.event_type_id = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'event_type_id' field has been set */
    public boolean hasEventTypeId() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'event_type_id' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearEventTypeId() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'event_subtype_id' field */
    public java.lang.CharSequence getEventSubtypeId() {
      return event_subtype_id;
    }
    
    /** Sets the value of the 'event_subtype_id' field */
    public it.gov.daf.iotingestion.event.Event.Builder setEventSubtypeId(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.event_subtype_id = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'event_subtype_id' field has been set */
    public boolean hasEventSubtypeId() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'event_subtype_id' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearEventSubtypeId() {
      event_subtype_id = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'event_annotation' field */
    public java.lang.CharSequence getEventAnnotation() {
      return event_annotation;
    }
    
    /** Sets the value of the 'event_annotation' field */
    public it.gov.daf.iotingestion.event.Event.Builder setEventAnnotation(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.event_annotation = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'event_annotation' field has been set */
    public boolean hasEventAnnotation() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'event_annotation' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearEventAnnotation() {
      event_annotation = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'source' field */
    public java.lang.CharSequence getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public it.gov.daf.iotingestion.event.Event.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.source = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'source' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearSource() {
      source = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'location' field */
    public java.lang.CharSequence getLocation() {
      return location;
    }
    
    /** Sets the value of the 'location' field */
    public it.gov.daf.iotingestion.event.Event.Builder setLocation(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.location = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'location' field has been set */
    public boolean hasLocation() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'location' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearLocation() {
      location = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'body' field */
    public java.nio.ByteBuffer getBody() {
      return body;
    }
    
    /** Sets the value of the 'body' field */
    public it.gov.daf.iotingestion.event.Event.Builder setBody(java.nio.ByteBuffer value) {
      validate(fields()[10], value);
      this.body = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'body' field has been set */
    public boolean hasBody() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'body' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearBody() {
      body = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'attributes' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAttributes() {
      return attributes;
    }
    
    /** Sets the value of the 'attributes' field */
    public it.gov.daf.iotingestion.event.Event.Builder setAttributes(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[11], value);
      this.attributes = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'attributes' field has been set */
    public boolean hasAttributes() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'attributes' field */
    public it.gov.daf.iotingestion.event.Event.Builder clearAttributes() {
      attributes = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public Event build() {
      try {
        Event record = new Event();
        record.version = fieldSetFlags()[0] ? this.version : (java.lang.Long) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ts = fieldSetFlags()[2] ? this.ts : (java.lang.Long) defaultValue(fields()[2]);
        record.temporal_granularity = fieldSetFlags()[3] ? this.temporal_granularity : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.event_certainty = fieldSetFlags()[4] ? this.event_certainty : (java.lang.Double) defaultValue(fields()[4]);
        record.event_type_id = fieldSetFlags()[5] ? this.event_type_id : (java.lang.Integer) defaultValue(fields()[5]);
        record.event_subtype_id = fieldSetFlags()[6] ? this.event_subtype_id : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.event_annotation = fieldSetFlags()[7] ? this.event_annotation : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.source = fieldSetFlags()[8] ? this.source : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.location = fieldSetFlags()[9] ? this.location : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.body = fieldSetFlags()[10] ? this.body : (java.nio.ByteBuffer) defaultValue(fields()[10]);
        record.attributes = fieldSetFlags()[11] ? this.attributes : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
